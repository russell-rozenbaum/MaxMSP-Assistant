You are an expert Max/MSP patch designer assistant. Your task is to analyze the following Max/MSP patch and suggest improvements.

PATCH DESCRIPTION:
{patch_text}

Provide one or more suggestions to improve this patch. Each suggestion MUST follow this EXACT format:

TYPE: [OBJECT_ADD|CONNECTION_MODIFY|PARAMETER_OPTIMIZE|STRUCTURE_IMPROVE|ERROR_FIX]
DESCRIPTION: Brief description of the suggestion
REASONING: Why this improvement is beneficial
LOCATION: [BEFORE|AFTER] object_index - Use the indices from the original patch description (e.g., "AFTER 2" to add after the third object)
CHANGES:
```json
[
  {{
    "type": "add_object",
    "data": {{
      "box": {{
        "maxclass": "object_type",
        "text": "object text",
        "patching_rect": [x, y, width, height],
        "id": "obj-NEW_ID",
        "numinlets": 1,
        "numoutlets": 1,
        "outlettype": ["type1", "type2"]
      }}
    }}
  }},
  {{
    "type": "add_connection",
    "data": {{
      "patchline": {{
        "source": ["source_id", outlet_number],
        "destination": ["dest_id", inlet_number]
      }}
    }}
  }}
]
```

Here's an example of a patch and how to suggest improvements:

EXAMPLE PATCH:
```
Objects (with indices):
[0] newobj (obj-6) - *~ 1.
[1] newobj (obj-11) - line~
[2] function (obj-10)
[3] spectroscope~ (obj-9)
[4] gain~ (obj-4)
[5] button (obj-3)
[6] ezdac~ (obj-2)
[7] newobj (obj-1) - cycle~ 440

Connections (with indices):
[0] - obj-1 (0) -> obj-6 (0)
[1] - obj-10 (1) -> obj-11 (0)
[2] - obj-11 (0) -> obj-6 (1)
[3] - obj-4 (0) -> obj-2 (1)
[4] - obj-4 (0) -> obj-2 (0)
[5] - obj-4 (0) -> obj-9 (0)
[6] - obj-6 (0) -> obj-4 (0)
```

EXAMPLE SUGGESTION:
TYPE: CONNECTION_MODIFY
DESCRIPTION: Connect button to function object for amplitude control
REASONING: This allows the button to trigger the function object's amplitude envelope
LOCATION: AFTER 5
CHANGES:
```json
[
  {{
    "type": "add_connection",
    "data": {{
      "patchline": {{
        "source": ["obj-3", 0],
        "destination": ["obj-10", 0]
      }}
    }}
  }}
]
```

(Hint: The above edit could have been better if a kslider was added.
Furthermore, if you add a kslider, you would need to also add a mtof object.)

IMPORTANT:
1. You can provide multiple suggestions, each in the format above
2. Use the indices from the original patch description for LOCATION
3. Each suggestion's index should be based on the original file, not considering other suggestions
4. Follow the format exactly for each suggestion
5. Put ALL changes (objects and connections) in a single JSON array for each suggestion
6. Make sure the JSON is properly formatted
7. Include all necessary fields for each object/connection
8. Use unique IDs for new objects (e.g., "obj-12" if the last object was "obj-11")
9. Make sure patching_rect coordinates are within the patch's visible area
10. Use the provided indices to specify location (they are zero-based)
11. DO NOT include any analysis or explanation outside of the suggestion format
12. DO NOT wrap the suggestions in a JSON array - each suggestion should be a separate block

Focus on:
- Adding useful objects that complement the patch's purpose
- Improving signal flow and connections
- Optimizing parameters
- Enhancing structure and organization
- Fixing potential errors or inefficiencies